/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
  // Apply the java-library plugin to add support for Java Library
//  id 'com.gluonhq.client-gradle-plugin' version '0.0.11'
  id 'java-library'
  id 'eclipse'
  id 'application'
  id 'java'
  id 'net.nemerosa.versioning' version '2.6.1'
  
  id 'org.openjfx.javafxplugin' version '0.0.8'
  id 'org.beryx.runtime' version '1.11.4'
  id 'project-report'
  id "io.spring.dependency-management" version "1.0.6.RELEASE"
}

def springVersion = '5.2.3.RELEASE'

javafx {
  version = "14"
  modules = [
	'javafx.controls',
	'javafx.fxml',
	'javafx.swing'
  ]
}

repositories {
  // Use jcenter for resolving dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
  google()
  mavenCentral()
//  maven {
//	url 'https://nexus.gluonhq.com/nexus/content/repositories/releases/'
//}
}

dependencies {


  // This dependency is exported to consumers, that is to say found on their implementation classpath.
  api 'org.apache.commons:commons-math3:3.6.1'

compileOnly 'org.projectlombok:lombok:1.18.12'
  annotationProcessor 'org.projectlombok:lombok:1.18.12'
}

mainClassName = "ir.hosseinmp76.shayancircles.Main"

run {

  standardInput = System.in

}

jar {
  manifest {
	  attributes(
			  'Main-Class': 'ir.hosseinmp76.shayancircles.ui.fx.FXApp2',
			  'Built-By'       : System.properties['user.name'],
			  'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
			  'Build-Revision' : versioning.info.commit,
//			  "Implementation-Version": archiveVersion,
			  'Created-By'     : "Gradle ${gradle.gradleVersion}",
			  'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
			  'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
  
	  )
  }
}
